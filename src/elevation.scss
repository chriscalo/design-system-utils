@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function shadow(
  $distance: 2px,
  $base-color: black,
  $opacity: 0.10,
) {
  $x: 0;
  $y: $distance;
  $blur: $y * 2;
  $spread: 0;
  $color: change-color($base-color, $alpha: $opacity);
  @return $x $y $blur $spread $color;
}

@function inset-shadow($args...) {
  @return inset shadow($args...);
}

@mixin shadow($args...) {
  box-shadow: shadow($args...);
}

@mixin inset-shadow($args...) {
  box-shadow: inset shadow($args...);
}

// FIXME: decide whether the short-hands are s,m,l or sm,md,lg
$shadow-sm: shadow();
$shadow-md:
  shadow(4px, black, 0.12),
  shadow(2px, black, 0.08);
$shadow-lg:
  shadow(15px, black, 0.11),
  shadow(5px, black, 0.08);
$shadow-default: $shadow-sm;


// Material shadows
// Adapted from:
// https://github.com/material-components/material-components-web/blob/master/packages/mdc-elevation/_mixins.scss
// https://github.com/material-components/material-components-web/blob/master/packages/mdc-elevation/_variables.scss

$_shadow-params: (
  umbra: (
    opacity: 0.2,
    diffusion: (
      0: 0px 0px 0px 0px,
      1: 0px 2px 1px -1px,
      2: 0px 3px 1px -2px,
      3: 0px 3px 3px -2px,
      4: 0px 2px 4px -1px,
      5: 0px 3px 5px -1px,
      6: 0px 3px 5px -1px,
      7: 0px 4px 5px -2px,
      8: 0px 5px 5px -3px,
      9: 0px 5px 6px -3px,
      10: 0px 6px 6px -3px,
      11: 0px 6px 7px -4px,
      12: 0px 7px 8px -4px,
      13: 0px 7px 8px -4px,
      14: 0px 7px 9px -4px,
      15: 0px 8px 9px -5px,
      16: 0px 8px 10px -5px,
      17: 0px 8px 11px -5px,
      18: 0px 9px 11px -5px,
      19: 0px 9px 12px -6px,
      20: 0px 10px 13px -6px,
      21: 0px 10px 13px -6px,
      22: 0px 10px 14px -6px,
      23: 0px 11px 14px -7px,
      24: 0px 11px 15px -7px,
    ),
  ),
  penumbra: (
    opacity: 0.14,
    diffusion: (
      0: 0px 0px 0px 0px,
      1: 0px 1px 1px 0px,
      2: 0px 2px 2px 0px,
      3: 0px 3px 4px 0px,
      4: 0px 4px 5px 0px,
      5: 0px 5px 8px 0px,
      6: 0px 6px 10px 0px,
      7: 0px 7px 10px 1px,
      8: 0px 8px 10px 1px,
      9: 0px 9px 12px 1px,
      10: 0px 10px 14px 1px,
      11: 0px 11px 15px 1px,
      12: 0px 12px 17px 2px,
      13: 0px 13px 19px 2px,
      14: 0px 14px 21px 2px,
      15: 0px 15px 22px 2px,
      16: 0px 16px 24px 2px,
      17: 0px 17px 26px 2px,
      18: 0px 18px 28px 2px,
      19: 0px 19px 29px 2px,
      20: 0px 20px 31px 3px,
      21: 0px 21px 33px 3px,
      22: 0px 22px 35px 3px,
      23: 0px 23px 36px 3px,
      24: 0px 24px 38px 3px,
    ),
  ),
  ambient: (
    opacity: 0.12,
    diffusion: (
      0: 0px 0px 0px 0px,
      1: 0px 1px 3px 0px,
      2: 0px 1px 5px 0px,
      3: 0px 1px 8px 0px,
      4: 0px 1px 10px 0px,
      5: 0px 1px 14px 0px,
      6: 0px 1px 18px 0px,
      7: 0px 2px 16px 1px,
      8: 0px 3px 14px 2px,
      9: 0px 3px 16px 2px,
      10: 0px 4px 18px 3px,
      11: 0px 4px 20px 3px,
      12: 0px 5px 22px 4px,
      13: 0px 5px 24px 4px,
      14: 0px 5px 26px 4px,
      15: 0px 6px 28px 5px,
      16: 0px 6px 30px 5px,
      17: 0px 6px 32px 5px,
      18: 0px 7px 34px 6px,
      19: 0px 7px 36px 6px,
      20: 0px 8px 38px 7px,
      21: 0px 8px 40px 7px,
      22: 0px 8px 42px 7px,
      23: 0px 9px 44px 8px,
      24: 0px 9px 46px 8px,
    ),
  ),
);

@function _shadow-component(
  $z,
  $component,
  $base-color: black,
  $opacity-shift: 0
) {
  
  $opacity:
    map-deep-get(
      $_shadow-params,
      $component,
      opacity,
      $z
    ) + $opacity-shift);
  
  $color: change-color($base-color, $alpha: $opacity);
  
  $shadow: map-deep-get(
    $_shadow-params,
    $component,
    diffusion,
    $z
  );
  
  @return $shadow $color;
}

// TODO: rename to `shadow-elevation` or similar?
@function elevation(
  $z,
  $base-color: black,
  $opacity-shift: 0
) {
  $umbra: _shadow-component($z, umbra, $base-color, $opacity-shift);
  $penumbra: _shadow-component($z, penumbra, $base-color, $opacity-shift);
  $ambient: _shadow-component($z, ambient, $base-color, $opacity-shift);
  @return $umbra, $penumbra, $ambient;
}
